{
    "swagger": "2.0",
    "info": {
        "description": "This is a simple Rental Service server.",
        "version": "0.0.7",
        "title": "Swagger Rental Service",
        "contact": {
            "name": "bolszow@gmail.com"
        },
        "license": {
            "name": "MIT",
            "url": "http://opensource.org/licenses/MIT"
        }
    },
    "basePath": "/api",
    "schemes": [
        "http"
    ],
    "paths": {
        "/movies": {
            "post": {
                "tags": [
                    "movie"
                ],
                "summary": "Add a new movie to the Rental Service",
                "description": "",
                "operationId": "addMovie",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name"  : "body",
                        "description": "Movie object to add to the Rental Service",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/movie"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Movie response",
                        "schema": {
                            "$ref": "#/definitions/movie"
                        }
                    },
                    "400": {
                        "description": "Validation exception"
                    }
                }
            },
            "get": {
                "tags": [
                    "movie"
                ],
                "description": "Returns all movies from the Rental Service",
                "operationId": "findMovies",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Title to filter by",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "maximum number of results to return",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Movie response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/movie"
                            }
                        }
                    },
                    "404": {
                        "description": "Movies not found"
                    },
                    "400": {
                        "description": "Validation exception"
                    }
                }
            }
        },
        "/movies/{movieId}": {
            "get": {
                "tags": [
                    "movie"
                ],
                "summary": "Find movie by ID",
                "description": "",
                "operationId": "getMovieById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "movieId",
                        "description": "ID of movie that needs to be fetched",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/movie"
                        }
                    },
                    "404": {
                        "description": "Movie not found"
                    },
                    "400": {
                        "description": "Invalid movie ID"
                    }
                }
            },
            "put": {
                "tags": [
                    "movie"
                ],
                "summary": "Update existing movie",
                "description": "",
                "operationId": "updateMovie",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "movieId",
                        "description": "ID of movie that needs to be fetched",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Movie object to update existing movie",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/movie"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Movie not found"
                    },
                    "400": {
                        "description": "Validation exception"
                    }
                }
            },
            "delete": {
                "tags": [
                    "movie"
                ],
                "summary": "Delete a movie",
                "description": "",
                "operationId": "deleteMovie",
                "parameters": [
                    {
                        "name": "movieId",
                        "in": "path",
                        "description": "Id of movie to delete",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Movie has been removed",
                        "schema": {
                            "$ref": "#/definitions/movie"
                        }
                    },
                    "400": {
                        "description": "Invalid movie ID"
                    },
                    "404": {
                        "description": "Movie not found"
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get user list",
                "description": "",
                "operationId": "getUserList",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "username",
                        "description": "The name that to be fetched",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/user"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Create user",
                "description": "",
                "operationId": "createUser",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Create user object",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/user"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/users/{userId}": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get user by ID",
                "description": "",
                "operationId": "getUserByName",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "description": "Return user by ID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/user"
                        }
                    },
                    "400": {
                        "description": "Invalid username suppleid"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "user"
                ],
                "summary": "Update user",
                "description": "",
                "operationId": "updateUser",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "description": "name that need to be updated",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Updated user object",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/user"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted",
                        "schema": {
                            "$ref": "#/definitions/user"
                        }
                    },
                    "400": {
                        "description": "Invalid userId supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "user"
                ],
                "summary": "Delete user",
                "operationId": "deleteUser",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "description": "The name that needs to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted",
                        "schema": {
                            "$ref": "#/definitions/user"
                        }
                    },
                    "400": {
                        "description": "Invalid userId supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/users/{userId}/movies": {
            "get": {
                "tags": [
                    "user movies"
                ],
                "summary": "List of user movies",
                "description": "",
                "operationId": "userMovies",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "description": "User ID whose list of movies should be displayed",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of user movies"
                    }
                }
            },
            "put": {
                "tags": [
                    "user movies"
                ],
                "summary": "Update list of user movies",
                "description": "",
                "operationId": "updateUserMovies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "description": "User ID whose list of movies should be updated",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "New user movies list",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation successful"
                    }
                }
            }
        }
    },
    "definitions": {
        "movie": {
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "posterUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "user": {
            "type": "object",
            "required": [
                "username",
                "firstName",
                "lastName"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "movies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/movie"
                    }
                }
            }
        }
    }
}