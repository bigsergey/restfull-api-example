{
    "swagger": "2.0",
    "info": {
        "description": "This is a simple Rental Service server.",
        "version": "0.0.1",
        "title": "Swagger Rental Service",
        "contact": {
            "name": "bolszow@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "basePath": "/",
    "schemes": [
        "http"
    ],
    "paths": {
        "/movies": {
            "post": {
                "tags": [
                    "movie"
                ],
                "summary": "Add a new movie to the Rental Service",
                "description": "",
                "operationId": "addMovie",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Movie object to add to the Rental Service",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/movie"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Movie response",
                        "schema": {
                            "$ref": "#/definition/movie"
                        }
                    },
                    "405": {
                        "description": "Invalid input"
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "movie"
                ],
                "summary": "Update existing movie",
                "description": "",
                "operationId": "updateMovie",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Movie object to update existing movie",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/movie"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Movie not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                }
            },
            "get": {
                "description": "Returns all movies from the Rental Service",
                "operationId": "findMovies",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "tags",
                        "in": "query",
                        "description": "tags to filter by",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "maximum number of results to return",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "movie response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/movie"
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }
                }
            }
        },
        "/movies/{movieId}": {
            "get": {
                "tags": [
                    "movie"
                ],
                "summary": "Find movie by ID",
                "description": "",
                "operationId": "getMovieById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "movieId",
                        "description": "ID of movie that needs to be fetched",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/movie"
                        }
                    },
                    "404": {
                        "description": "Movie not found"
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "movie"
                ],
                "summary": "Updates a movie in the store with form data",
                "description": "",
                "operationId": "updateMovieWithForm",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "movieId",
                        "description": "Id of movie what needs to be updated",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "formData",
                        "name": "title",
                        "description": "Updated title of the movie",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "status",
                        "description": "Updated status of the movie",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/movie"
                        }
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                }
            },
            "delete": {
                "summary": "Delete a movie",
                "description": "",
                "operationId": "deleteMovie",
                "parameters": [
                    {
                        "name": "movieId",
                        "in": "path",
                        "description": "Id of movie to delete",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Invalid movie value"
                    }
                }
            }
        }
    },
    "definitions": {
        "Category": {
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "movie": {
            "required": [
                "title",
                "posterUrls"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "category": {
                    "$ref": "#/definitions/Category"
                },
                "title": {
                    "type": "string",
                    "example": "x-men"
                },
                "posterUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "errorModel": {
            "required": [
                "code",
                "message"
            ],
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}